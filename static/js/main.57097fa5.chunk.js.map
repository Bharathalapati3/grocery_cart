{"version":3,"sources":["components/Product/ProductComponent.js","components/Modal/ModalComponent.js","components/CartFooter/CartFooterComponent.js","components/ProductList/ProductListComponent.js","App.js","serviceWorker.js","index.js"],"names":["Product","item","value","id","brandName","productName","quantity","price","mrp","imageUrl","offerText","count","increment","decrement","className","src","alt","onClick","Modal","handleClose","show","children","showHideClassName","CartFooter","state","showModal","setState","hideModal","this","props","qty","total","Component","ProductList","products","cart","cartTotal","getItem","find","tqty","tempCart","selectedProduct","index","indexOf","product","addTotals","map","fetch","then","response","console","log","json","data","catch","err","key","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.57097fa5.chunk.js","sourcesContent":["import React from 'react';\r\nimport  './ProductStyles.css';\r\n\r\nfunction Product({item,value}){\r\n    const {id,brandName,productName,quantity,price,mrp,imageUrl,offerText,count} = item;\r\n    const{increment,decrement} = value;\r\n    return (\r\n      <div>\r\n        <div className='item'>\r\n           <div className='item-align'> \r\n              <div className='item-left'>\r\n              <img className ='img-pic' src={imageUrl} alt='img' />\r\n              <h5>{offerText}</h5>\r\n         </div>\r\n         <div className='item-right'>\r\n         \r\n            <h3>{brandName}</h3>\r\n            <h4>{productName}</h4>\r\n            <h5>{quantity}</h5>\r\n            <h5>Price:{price} RS</h5>\r\n            <h5>MRP:{mrp} RS</h5> \r\n            <div className='modifyitems'>\r\n            <button className='button' onClick={()=>increment(id)}>Add to cart</button>\r\n            <div className='margin'>\r\n             <span className=\"btn-black\" onClick={()=>decrement(id)} >\r\n             -\r\n              </span>\r\n             <span className=\"quantity\">{count}</span> \r\n               <span className=\"btn-black\" onClick={()=>increment(id)} > \r\n              + \r\n            </span>\r\n \r\n     </div>\r\n \r\n            </div>\r\n            </div>\r\n         </div>\r\n         \r\n         </div> \r\n         <hr/> \r\n         </div>\r\n         )\r\n}\r\n\r\nexport default Product;\r\n","import React from \"react\";\r\nimport \"./ModalStyles.css\";\r\n\r\nconst Modal = ({ handleClose, show, children }) => {\r\n  const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\r\n\r\n  return (\r\n    <div className={showHideClassName}>\r\n      <section className=\"modal-main\">\r\n        {children}\r\n        <button onClick={handleClose}>Close</button>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\nimport \"./CartFooterStyles.css\";\r\nimport Modal from \"../Modal/ModalComponent\";\r\n\r\nclass CartFooter extends Component {\r\n  state = { show: false };\r\n\r\n  showModal = () => {\r\n    this.setState({ show: true });\r\n  };\r\n\r\n  hideModal = () => {\r\n    this.setState({ show: false });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"totalCart\">\r\n        <div className=\"values\">\r\n          <div className=\"content-left\">\r\n            <strong>QTY-{this.props.qty}</strong>\r\n            <strong>Total-{this.props.total} RS</strong>\r\n          </div>\r\n        </div>\r\n        <div className=\"content-right\">\r\n          <Modal show={this.state.show} handleClose={this.hideModal}>\r\n            <h3>Total Amount: {this.props.total}</h3>\r\n            <h4>Order Successfully Placed</h4>\r\n          </Modal>\r\n          <button onClick={this.showModal}>CHECKOUT</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CartFooter;\r\n","import React, { Component } from \"react\";\r\nimport Product from \"../Product/ProductComponent\";\r\nimport CartFooter from \"../CartFooter/CartFooterComponent\";\r\nimport \"./ProductListStyles.css\";\r\nclass ProductList extends Component {\r\n  state = {\r\n    products: [],\r\n    cart: [],\r\n    cartTotal: 0,\r\n    qty: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"./data.json\")\r\n      .then(response => {\r\n        console.log(response);\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        this.setState({ products: data });\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Error Reading data \" + err);\r\n      });\r\n  }\r\n\r\n  getItem = id => {\r\n    const product = this.state.products.find(item => item.id === id);\r\n    return product;\r\n  };\r\n\r\n  increment = id => {\r\n    let tqty = this.state.qty;\r\n    let tempCart = [...this.state.products];\r\n    const selectedProduct = tempCart.find(item => item.id === id);\r\n    const index = tempCart.indexOf(selectedProduct);\r\n    const product = tempCart[index];\r\n\r\n    product.count = product.count + 1;\r\n    tqty++;\r\n    this.setState({ qty: tqty });\r\n\r\n    product.total = product.count * product.mrp;\r\n\r\n    this.setState(\r\n      () => {\r\n        return {\r\n          cart: [...tempCart]\r\n        };\r\n      },\r\n      () => {\r\n        this.addTotals();\r\n      }\r\n    );\r\n  };\r\n  decrement = id => {\r\n    let tqty = this.state.qty;\r\n    let tempCart = [...this.state.products];\r\n    const selectedProduct = tempCart.find(item => item.id === id);\r\n    const index = tempCart.indexOf(selectedProduct);\r\n    const product = tempCart[index];\r\n\r\n    product.count = product.count - 1;\r\n    tqty--;\r\n\r\n    if (product.count < 0) {\r\n      product.count = 0;\r\n      tqty = this.state.qty;\r\n    } else {\r\n      product.total = product.count * product.mrp;\r\n      this.setState(\r\n        () => {\r\n          return {\r\n            cart: [...tempCart]\r\n          };\r\n        },\r\n        () => {\r\n          this.addTotals();\r\n        }\r\n      );\r\n    }\r\n    this.setState({ qty: tqty });\r\n  };\r\n\r\n  addTotals = () => {\r\n    let total = 0;\r\n    this.state.products.map(item => (total += item.total));\r\n\r\n    this.setState(() => {\r\n      return {\r\n        cartTotal: total\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"productList\">\r\n        {this.state.products.map(item => (\r\n          <Product\r\n            key={item.id}\r\n            item={item}\r\n            value={{ increment: this.increment, decrement: this.decrement }}\r\n          />\r\n        ))}\r\n\r\n        <CartFooter total={this.state.cartTotal} qty={this.state.qty} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductList;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport ProductList from \"./components/ProductList/ProductListComponent\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <h1> Grocery Cart </h1>\n      <ProductList />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}